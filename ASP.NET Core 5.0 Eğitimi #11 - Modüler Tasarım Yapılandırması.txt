Partial View nedir?

- Modüler tasarım yapılanmasında her bir modülün ayrı bir cshtml parça olarak tasarlanmasını ve ihtiyaç doğrultusunda ilgili parçanın çağrılıp kullanılmasını sağlayan bir yöntemdir.

Bir sayfayı oluşturan Header, Footer, Content, menüler gibi parçaları tek bir sayfada yazmaktansa farklı .cshtml dosyalarında yazıp parçalamak sonra referanslar ile birleştirmek kod yönetimi için daha elverişlidir.

Views -> Home -> Partials klasörünü açıp içerisine;

_HeaderPartial.cshtml;

<header>
    <nav class = "navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
        <div class="container">
            <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">Sayfa Başlığı</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label ="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav flex-grow-1">
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Anasayfa</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Privacy" asp-action="Index">Privacy</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
</header>

---

_SlaytPartial.cshtml;

<!-- Carousel wrapper -->
<div id="carouselBasicExample" class="carousel slide carousel-fade" data-mdb-ride="carousel">
    <!-- Indicators -->
    <div class="carousel-indicators">
        <button type="button"
                data-mdb-target="#carouselBasicExample"
                data-mdb-slide-to="0"
                class="active"
                aria-current="true"
                aria-label="Slide 1"></button>
        <button type="button"
                data-mdb-target="#carouselBasicExample"
                data-mdb-slide-to="1"
                aria-label="Slide 2"></button>
        <button type="button"
                data-mdb-target="#carouselBasicExample"
                data-mdb-slide-to="2"
                aria-label="Slide 3"></button>
    </div>

    <!-- Inner -->
    <div class="carousel-inner">
        <!-- Single item -->
        <div class="carousel-item active">
            <img src="https://mdbcdn.b-cdn.net/img/Photos/Slides/img%20(15).webp" class="d-block w-100" alt="Sunset Over the City" />
            <div class="carousel-caption d-none d-md-block">
                <h5>First slide label</h5>
                <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>
            </div>
        </div>

        <!-- Single item -->
        <div class="carousel-item">
            <img src="https://mdbcdn.b-cdn.net/img/Photos/Slides/img%20(22).webp" class="d-block w-100" alt="Canyon at Nigh" />
            <div class="carousel-caption d-none d-md-block">
                <h5>Second slide label</h5>
                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
            </div>
        </div>

        <!-- Single item -->
        <div class="carousel-item">
            <img src="https://mdbcdn.b-cdn.net/img/Photos/Slides/img%20(23).webp" class="d-block w-100" alt="Cliff Above a Stormy Sea" />
            <div class="carousel-caption d-none d-md-block">
                <h5>Third slide label</h5>
                <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>
            </div>
        </div>
    </div>
    <!-- Inner -->
    <!-- Controls -->
    <button class="carousel-control-prev" type="button" data-mdb-target="#carouselBasicExample" data-mdb-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-mdb-target="#carouselBasicExample" data-mdb-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
    </button>
</div>
<!-- Carousel wrapper -->

---

_LeftMenuPartial.cshtml;

<!--Main Navigation-->
<header>
    <!-- Sidebar -->
    <nav id="sidebarMenu" class="collapse d-lg-block sidebar collapse bg-white">
        <div class="position-sticky">
            <div class="list-group list-group-flush mx-3 mt-4">
                <a href="#" class="list-group-item list-group-item-action py-2 ripple" aria-current="true">
                    <i class="fas fa-tachometer-alt fa-fw me-3"></i><span>Main dashboard</span>
                </a>
                <a href="#" class="list-group-item list-group-item-action py-2 ripple active">
                    <i class="fas fa-chart-area fa-fw me-3"></i><span>Webiste traffic</span>
                </a>
                <a href="#" class="list-group-item list-group-item-action py-2 ripple">
                    <i class="fas fa-lock fa-fw me-3"></i><span>Password</span>
                </a>
                <a href="#" class="list-group-item list-group-item-action py-2 ripple">
                    <i class="fas fa-chart-line fa-fw me-3"></i><span>Analytics</span>
                </a>
                <a href="#" class="list-group-item list-group-item-action py-2 ripple">
                    <i class="fas fa-chart-pie fa-fw me-3"></i><span>SEO</span>
                </a>
                <a href="#" class="list-group-item list-group-item-action py-2 ripple">
                    <i class="fas fa-chart-bar fa-fw me-3"></i><span>Orders</span>
                </a>
                <a href="#" class="list-group-item list-group-item-action py-2 ripple">
                    <i class="fas fa-globe fa-fw me-3"></i><span>International</span>
                </a>
                <a href="#" class="list-group-item list-group-item-action py-2 ripple">
                    <i class="fas fa-building fa-fw me-3"></i><span>Partners</span>
                </a>
                <a href="#" class="list-group-item list-group-item-action py-2 ripple">
                    <i class="fas fa-calendar fa-fw me-3"></i><span>Calendar</span>
                </a>
                <a href="#" class="list-group-item list-group-item-action py-2 ripple">
                    <i class="fas fa-users fa-fw me-3"></i><span>Users</span>
                </a>
                <a href="#" class="list-group-item list-group-item-action py-2 ripple">
                    <i class="fas fa-money-bill fa-fw me-3"></i><span>Sales</span>
                </a>
            </div>
        </div>
    </nav>
    <!-- Sidebar -->
    <!-- Navbar -->
    <nav id="main-navbar" class="navbar navbar-expand-lg navbar-light bg-white fixed-top">
        <!-- Container wrapper -->
        <div class="container-fluid">
            <!-- Toggle button -->
            <button class="navbar-toggler" type="button" data-mdb-toggle="collapse" data-mdb-target="#sidebarMenu"
                    aria-controls="sidebarMenu" aria-expanded="false" aria-label="Toggle navigation">
                <i class="fas fa-bars"></i>
            </button>

            <!-- Brand -->
            <a class="navbar-brand" href="#">
                <img src="https://mdbcdn.b-cdn.net/img/logo/mdb-transaprent-noshadows.webp" height="25" alt="MDB Logo"
                     loading="lazy" />
            </a>
            <!-- Search form -->
            <form class="d-none d-md-flex input-group w-auto my-auto">
                <input autocomplete="off" type="search" class="form-control rounded"
                       placeholder='Search (ctrl + "/" to focus)' style="min-width: 225px;" />
                <span class="input-group-text border-0"><i class="fas fa-search"></i></span>
            </form>

            <!-- Right links -->
            <ul class="navbar-nav ms-auto d-flex flex-row">
                <!-- Notification dropdown -->
                <li class="nav-item dropdown">
                    <a class="nav-link me-3 me-lg-0 dropdown-toggle hidden-arrow" href="#" id="navbarDropdownMenuLink"
                       role="button" data-mdb-toggle="dropdown" aria-expanded="false">
                        <i class="fas fa-bell"></i>
                        <span class="badge rounded-pill badge-notification bg-danger">1</span>
                    </a>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdownMenuLink">
                        <li>
                            <a class="dropdown-item" href="#">Some news</a>
                        </li>
                        <li>
                            <a class="dropdown-item" href="#">Another news</a>
                        </li>
                        <li>
                            <a class="dropdown-item" href="#">Something else here</a>
                        </li>
                    </ul>
                </li>

                <!-- Icon -->
                <li class="nav-item">
                    <a class="nav-link me-3 me-lg-0" href="#">
                        <i class="fas fa-fill-drip"></i>
                    </a>
                </li>
                <!-- Icon -->
                <li class="nav-item me-3 me-lg-0">
                    <a class="nav-link" href="#">
                        <i class="fab fa-github"></i>
                    </a>
                </li>

                <!-- Icon dropdown -->
                <li class="nav-item dropdown">
                    <a class="nav-link me-3 me-lg-0 dropdown-toggle hidden-arrow" href="#" id="navbarDropdown"
                       role="button" data-mdb-toggle="dropdown" aria-expanded="false">
                        <i class="united kingdom flag m-0"></i>
                    </a>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                        <li>
                            <a class="dropdown-item" href="#">
                                <i class="united kingdom flag"></i>English
                                <i class="fa fa-check text-success ms-2"></i>
                            </a>
                        </li>
                        <li>
                            <hr class="dropdown-divider" />
                        </li>
                        <li>
                            <a class="dropdown-item" href="#"><i class="flag-poland flag"></i>Polski</a>
                        </li>
                        <li>
                            <a class="dropdown-item" href="#"><i class="flag-china flag"></i>中文</a>
                        </li>
                        <li>
                            <a class="dropdown-item" href="#"><i class="flag-japan flag"></i>日本語</a>
                        </li>
                        <li>
                            <a class="dropdown-item" href="#"><i class="flag-germany flag"></i>Deutsch</a>
                        </li>
                        <li>
                            <a class="dropdown-item" href="#"><i class="flag-france flag"></i>Français</a>
                        </li>
                        <li>
                            <a class="dropdown-item" href="#"><i class="flag-spain flag"></i>Español</a>
                        </li>
                        <li>
                            <a class="dropdown-item" href="#"><i class="flag-russia flag"></i>Русский</a>
                        </li>
                        <li>
                            <a class="dropdown-item" href="#"><i class="flag-portugal flag"></i>Português</a>
                        </li>
                    </ul>
                </li>

                <!-- Avatar -->
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle hidden-arrow d-flex align-items-center" href="#"
                       id="navbarDropdownMenuLink" role="button" data-mdb-toggle="dropdown" aria-expanded="false">
                        <img src="https://mdbcdn.b-cdn.net/img/Photos/Avatars/img (31).webp" class="rounded-circle"
                             height="22" alt="Avatar" loading="lazy" />
                    </a>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdownMenuLink">
                        <li>
                            <a class="dropdown-item" href="#">My profile</a>
                        </li>
                        <li>
                            <a class="dropdown-item" href="#">Settings</a>
                        </li>
                        <li>
                            <a class="dropdown-item" href="#">Logout</a>
                        </li>
                    </ul>
                </li>
            </ul>
        </div>
        <!-- Container wrapper -->
    </nav>
    <!-- Navbar -->
</header>
<!--Main Navigation-->
<!--Main layout-->
<main style="margin-top: 58px;">
    <div class="container pt-4"></div>
</main>
<!--Main layout-->

---

_FooterPartial.cshtml;

<!-- Footer -->
<footer class="text-center text-lg-start bg-light text-muted">
    <!-- Section: Social media -->
    <section class="d-flex justify-content-center justify-content-lg-between p-4 border-bottom">
        <!-- Left -->
        <div class="me-5 d-none d-lg-block">
            <span>Get connected with us on social networks:</span>
        </div>
        <!-- Left -->
        <!-- Right -->
        <div>
            <a href="" class="me-4 text-reset">
                <i class="fab fa-facebook-f"></i>
            </a>
            <a href="" class="me-4 text-reset">
                <i class="fab fa-twitter"></i>
            </a>
            <a href="" class="me-4 text-reset">
                <i class="fab fa-google"></i>
            </a>
            <a href="" class="me-4 text-reset">
                <i class="fab fa-instagram"></i>
            </a>
            <a href="" class="me-4 text-reset">
                <i class="fab fa-linkedin"></i>
            </a>
            <a href="" class="me-4 text-reset">
                <i class="fab fa-github"></i>
            </a>
        </div>
        <!-- Right -->
    </section>
    <!-- Section: Social media -->
    <!-- Section: Links  -->
    <section class="">
        <div class="container text-center text-md-start mt-5">
            <!-- Grid row -->
            <div class="row mt-3">
                <!-- Grid column -->
                <div class="col-md-3 col-lg-4 col-xl-3 mx-auto mb-4">
                    <!-- Content -->
                    <h6 class="text-uppercase fw-bold mb-4">
                        <i class="fas fa-gem me-3"></i>Company name
                    </h6>
                    <p>
                        Here you can use rows and columns to organize your footer content. Lorem ipsum
                        dolor sit amet, consectetur adipisicing elit.
                    </p>
                </div>
                <!-- Grid column -->
                <!-- Grid column -->
                <div class="col-md-2 col-lg-2 col-xl-2 mx-auto mb-4">
                    <!-- Links -->
                    <h6 class="text-uppercase fw-bold mb-4">
                        Products
                    </h6>
                    <p>
                        <a href="#!" class="text-reset">Angular</a>
                    </p>
                    <p>
                        <a href="#!" class="text-reset">React</a>
                    </p>
                    <p>
                        <a href="#!" class="text-reset">Vue</a>
                    </p>
                    <p>
                        <a href="#!" class="text-reset">Laravel</a>
                    </p>
                </div>
                <!-- Grid column -->
                <!-- Grid column -->
                <div class="col-md-3 col-lg-2 col-xl-2 mx-auto mb-4">
                    <!-- Links -->
                    <h6 class="text-uppercase fw-bold mb-4">
                        Useful links
                    </h6>
                    <p>
                        <a href="#!" class="text-reset">Pricing</a>
                    </p>
                    <p>
                        <a href="#!" class="text-reset">Settings</a>
                    </p>
                    <p>
                        <a href="#!" class="text-reset">Orders</a>
                    </p>
                    <p>
                        <a href="#!" class="text-reset">Help</a>
                    </p>
                </div>
                <!-- Grid column -->
                <!-- Grid column -->
                <div class="col-md-4 col-lg-3 col-xl-3 mx-auto mb-md-0 mb-4">
                    <!-- Links -->
                    <h6 class="text-uppercase fw-bold mb-4">Contact</h6>
                    <p><i class="fas fa-home me-3"></i> New York, NY 10012, US</p>
                    <p>
                        <i class="fas fa-envelope me-3"></i>
                        info@example.com
                    </p>
                    <p><i class="fas fa-phone me-3"></i> + 01 234 567 88</p>
                    <p><i class="fas fa-print me-3"></i> + 01 234 567 89</p>
                </div>
                <!-- Grid column -->
            </div>
            <!-- Grid row -->
        </div>
    </section>
    <!-- Section: Links  -->
    <!-- Copyright -->
    <div class="text-center p-4" style="background-color: rgba(0, 0, 0, 0.05);">
        © 2021 Copyright:
        <a class="text-reset fw-bold" href="https://mdbootstrap.com/">MDBootstrap.com</a>
    </div>
    <!-- Copyright -->
</footer>
<!-- Footer -->

dosyalarını oluşturalım.

_Layout.cshtml dosyamızda <partial ... /> ile ilgili parçalı .cshtml dosyalarını ilgili yerlerde çağırarak birleştirebiliriz.

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Moduler Tasarim Yapilanmasi</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <script src="~/lib/bootstrap/dist/css/bootstrap.min.css"></script>
    <script src="~/lib/jquery/dist/bootstrap.min.css"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.css"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
</head>
<body>
    @*3 farklı yol var. ilk ikisi aşağıda.
    @Html.Partial("~/Views/Home/Partials/_HeaderPartial.cshtml")
    @{
    Html.RenderPartial("~/Views/Home/Partials/_HeaderPartial.cshtml");
    }*@

    @*TagHelper Yöntemi*@
    <partial name="~/Views/Home/Partials/_HeaderPartial.cshtml" />

    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <partial name="~/Views/Home/Partials/_SlaytPartial.cshtml" />
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                <partial name="~/Views/Home/Partials/_LeftMenuPartial.cshtml" />
            </div>
            <div class="col-md-8">
                <main role="main" class="pb-3">
                    @RenderBody()
                </main>
            </div>
            <div class="col-md-2"></div>
        </div>
    </div>
    <partial name="~/Views/Home/Partials/_FooterPartial.cshtml" />
</body>

</html>

--- 

Diğer dosyalar;

_ViewImports.cshtml;

@using ModulerTasarimYapilanmasi
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

---

_ViewStart.cshtml;

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

---

HomeController.cs;

using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;

namespace ModulerTasarimYapilanmasi.Controllers
{
    public class HomeController : Controller
    {       
        public IActionResult Index()
        {
            return View();
        }     
    }
}

--------------------------------------

Diyelim ki index action'u tetiklendiğinde _SlaytPartial'a değerler göndermek istiyoruz.

View render edilirken Layout'da bir yandan render edileceğinden dolayı partial'ların layout da ya da ilgili View'de olması farketmeksizin altlarındaki partial'lara otomatik olarak datalar taşınacaktır. 

Yani herhangi bir View'da ya da View'in kullandığı layout'da da partial kullanıyor olabiliriz. Fark etmeyecektir. View'i render ederken o View'in layout'u da render edileceğinden gönderdiğimiz data Layout'unda View'inde partiallarından erişilebilir olacaktır.

_SlaytPartial ve _Layout.cshtml'de kodun başına;

@model List<string>

    @{
        var m = Model;
        Console.WriteLine(""); //debug için.
    }
	
ekleyip çalıştırırsak ilgili verinin yakalandığını görürüz.

---

@model List<string> ile string yakalıyoruz. Fakat Controller'dan bize ya farklı bir türde değer gönderilirse ne yapmamız lazım?

public class HomeController : Controller
    {       
        public IActionResult Index()
        {
            ViewBag.Data = new List<string> { "img1.jpg", "img2.jpg", "img3.jpg" };
            //Böyle bir durumda yapılması gereken, datanın ilgili yerde yani _Layout'da model olarak
            //partial'a bildirilmesidir.
			
			object o = new object(); //burada controller'dan farklı bir türde veri gönderiliyor.
            return View(o);
            //Fakat bizim _SlaytPartial'da kullanacağımız model List<string> türünde. Bu yüzden ilgili datayı ViewBag, ViewData, //TempData ile taşımamız lazım.
        }
    }
	
...

_Layout.cshtml;

...

<div class="container">
        <div class="row">
            <div class="col-md-12">
                <partial name="~/Views/Home/Partials/_SlaytPartial.cshtml" model="ViewBag.Data" />
            </div>
        </div>
		....

bu ViewBag.Data'nın türü neyse ona göre model'ını belirle ve belirlemeye göre davranışını sergile, ilgili datayı yakala demiş olduk.

tekrardan _SlaytPartial.cshtml'e bakarsak;

@model List<string>

    @{
        var m = Model;
        Console.WriteLine(""); //debug için.
    }

burada Model List<string> iken;

ama _Layout'a gelen gerçek model <partial name="~/Views/Home/Partials/_SlaytPartial.cshtml" model="ViewBag.Data" />
object türündendir.

----

Partial View'lerde RenderSection Kritiği 

RenderSection kullanıldığı durumlarda Partial View'lerden RenderSection'a yani Layout'a değer gönderemeyiz. Hata vermez ama mekanizma çalışmaz.

----------------------------------------------

ViewComponent Kullanımı ve Partiel View'den Farkları

- ViewComponent modüler tasarım yapılanmasını oluşturulmasını ve kullanılmasını sağlayan bir yapıdır. .Net Core mimarisi ile hayatımıza giriş yapmıştır. Esasında PartialView ile aynı amaca hizmet eder fakat aralarında teknik olarak farklar vardır.

- Basit bir MVC yapısı düşünelim. Kullanıcıdan bir istek yapıldığını düşünürsek bunu önce Controller karşılar daha sonra bir veri taşıyacaksa buna Modelden ulaşır ve en nihayetinde View a ulaştırır. Eğer birde PartialView varsa en son olarak ona ulaşır.

- ViewComponent diyor ki beni de modüler olarak parça parça kullanabilirsin fakat eğer bende bir veri göstermek istiyorsan Controller’ı hiç araya katmadan onu yormadan direkt olarak Model ile iletişime geçip veriyi gösterebilirim. İşte PartialView ve ViewComponent arasındaki en temel fark budur. ViewComponent kendi .cs dosyası üzerinden dataları elde edebilir.

- Burada iş Controller üzerinden çıkıyor ve Controller üzerindeki gereksiz yük hafifliyor. Bu saye de projemiz üzerinde yer alan Controller amacından sapmadan işlerini yapabilir hale geliyorlar.

- Ve Controller Single Responsibility Prensibine de uygun hale geliyor.

ViewComponent iki yapılanmadan oluşmaktadır. Biri .cshtml iken diğeri bu .cshtml dosyasının beslendiği .cs dosyasıdır.

Önce ViewComponent'ın .cs kısmını oluşturalım.

Solution'a klasör ekleyelim. ViewComponents -> Add Class -> PersonellerViewComponent.cs

amaca yönelik isim + sonunda ViewComponent eklemek isimlendirme adetidir.

using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;

namespace ModulerTasarimYapilanmasi.ViewComponents
{
    //İsimlendirme yetmez ViewComponent'dan kalıtım almalıdır.
    public class PersonellerViewComponent : ViewComponent
    {
        //Tasarlanan ViewComponent çağrılıp render edildiğinde içerisinde çalışmasını istediğimiz kodları bu imzada bir metodun içerisinde yerleştirmeliyiz. İsmi Invoke olmalı ve geriye IViewComponentResult türünden değer dönmelidir. InvokeAsync() olarak da kullanılabilir.(ileride)
        public IViewComponentResult Invoke()
        {
            return View();
        }
    }
}

peki View'i nerede?

ViewComponent'ı kullanacağımız hangi controller ise o controller'ın altında barındırabiliriz.

Views -> Home -> Components klasörü açalım. Bu klasöründe içinde ViewComponent'in adında Personeller adlı bir klasör daha açalım.

Sonra burada da Add View ile Default.cshtml'i oluşturalım.

- ViewComponent render edilirken, render edilecek ViewComponent'ın View'ini bulabilmesi için 2 yere baktığını unutmayalım.
İlkinde o anda kullanıldığı controller'ın Views klasörünün altındaki Components adlı klasörü arar. Onun altında da hangi ViewComponent ise onun ismine karşılık bir klasör arar. Herhangi bir .cshtml ismi belirtilmediyse Default.cshtml'i arar, bulursa da kendi View'i olarak render eder, sonucu döndürür. Kendimiz isimlendirmek isteseydik PersonellerViewComponent.cs'de fonksiyonda return View("customViewName.cshtml") olarak belirtmemiz gerekecekti.

- Bir diğeri ise uygulama bazlı ViewComponent kullanacaksak ve bunu tek seferde tanımlamak istersek Shared klasörünün altına Components klasörü, onun altında Personeller klasörü ve içerisine Default.cshtml'i oluştururuz.

PersonellerViewComponent.cs;

using Microsoft.AspNetCore.Mvc;
using ModulerTasarimYapilanmasi.Models;
using System.Collections.Generic;

namespace ModulerTasarimYapilanmasi.ViewComponents
{
    public class PersonellerViewComponent : ViewComponent
    {     
        public IViewComponentResult Invoke()
        {
            List<Personel> datas = new List<Personel>
            {
                new Personel { Adi = "Cagatay", SoyAdi = "Demirtas"},
                new Personel { Adi = "Ahmet", SoyAdi = "Demirtas"},
                new Personel { Adi = "Nisa", SoyAdi = "Sürücü"},
                new Personel { Adi = "Toprak", SoyAdi = "Bükücü"},
                new Personel { Adi = "Avatar", SoyAdi = "Aang"},
            };
            return View(datas); //buradan gönderilmiş olan datas direkt Default.cshtml'den alınacaktır.
        }
    }
}

Model bazlı gönderdiğimiz için;

_ViewImports.cshtml'de;

@using ModulerTasarimYapilanmasi
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using ModulerTasarimYapilanmasi.Models //ile ilgili Models altındaki tüm class'ları erişilebilir yaptık.

Default.cshtml;

@model List<Personel>
<table class="table">
    <thead>
        <tr>
            <th scope="col">Adı</th>
            <th scope="col">Soyadı</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var personel in Model)
        {
            <tr>
                <td>@personel.Adi</td>
                <td>@personel.SoyAdi</td>
            </tr>
        }     
    </tbody>
</table>      

ve tabi ki Personel.cs;

namespace ModulerTasarimYapilanmasi.Models
{
    public class Personel
    {
        public string Adi { get; set; }
        public string SoyAdi { get; set; }

    }
}

ilgili alanda yani _Layout'da component'i çağırmak kaldı.

...

 <div class="row">
            <div class="col-md-2">
                <partial name="~/Views/Home/Partials/_LeftMenuPartial.cshtml" />
            </div>
            <div class="col-md-8">
                <main role="main" class="pb-3">
                    @RenderBody()
                </main>
                <div class="row">
                    <div class="col-md-12">
                        <h2>Merhaba Sitemize Oj Geldin!</h2>
                           @await Component.InvokeAsync("Personeller")
                    </div>
                </div>
            </div>
			.....
			
ile ekranda sonucu görebiliriz.

---

ViewComponent Gelen Request'leri Karşılayabilir mi?

ViewComponent'un View'i üzerinden yapılan herhangi bir post isteği, ViewComponent'ın .cs'i üzerinden karşılanmaz. Çünkü bu .cs dosyaları Controller gibi çalışamaz. Sadece get operasyonlarında çalışabilir. Yani belirli veri göndereceksek o zaman render edebiliriz.
Herhangi bir gelen isteği ViewComponent sınıflarında karşılayamayız. İstekler sadece controller'daki action'larda karşılayabiliriz.

Yapılan post, put, delete hatta get işlemlerini bile sadece Controller'larda karşılayabiliriz.

Böyle bir ihtiyaç olduğunda ViewComponent'ın View dosyasında bir form tasarladıysak bunun post neticesini bir controller'a yönlendirmemiz gereklidir.

---

ViewComponent'a Render Edilirken Değer Gönderme

- Render edilme esnasında ViewComponent'a _Layout.cs'deki,

@await Component.InvokeAsync("Personeller", new { id = 5 })

buradan gönderdiğimiz değerler ya da parametreler üzerinden .cs üzerindeki farklı değerleri handle edebilmekte ve ona göre render neticesindeki çıktılara müdahele edebilmektedir. Yani ViewComponent tersine bir data göndermemizi sağlayıp o dataya uygun modüler sonuçlar elde etmemizi sağlar.

İlgili .cs'i tetiklemeden önce .cs'e davranışlarını belirleyebileceğimiz değerler gönderip handle işlemlerine müdahele edebiliriz. Çıktıyı da değiştirebiliriz.

new { id = 5 } anonim türdeki nesneyi,

PersonellerViewComponent.cs'de

...
public IViewComponentResult Invoke(int id) //ilgili id'ye değerin geldiğini görürüz.
        {
            List<Personel> datas = new List<Personel>
            {
                new Personel { Adi = "Cagatay", SoyAdi = "Demirtas" },
				...
				
---

NonViewComponent Attribute'u ile ViewComponent Niteliklerinin Ezilmesi 

Bazen mimarilerde bir sınıftan tasarlayıp belirli nitelikler kazandırdığımız sınıflarımızı farklı amaçlarla kullanmak isteyebiliriz. Bir ViewComponent'tan türeyen sınıfın, artık ViewComponent olmadığını belirtmek için NonViewComponent tarafından işaretlenmesi yeterlidir.

 [NonViewComponent]
    public class PersonellerViewComponent : ViewComponent
    {...}
	
bu da bir özelliktir yani. (smiley)